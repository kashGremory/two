// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using two.Models;

namespace two.Migrations
{
    [DbContext(typeof(LivreContext))]
    [Migration("20181105084020_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("two.Models.Contenu", b =>
                {
                    b.Property<int>("ContenuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("LivreId");

                    b.Property<string>("Resume");

                    b.HasKey("ContenuId");

                    b.HasIndex("LivreId");

                    b.ToTable("Contenus");
                });

            modelBuilder.Entity("two.Models.Livre", b =>
                {
                    b.Property<int>("LivreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LivreAuteur");

                    b.Property<string>("LivreTitre");

                    b.HasKey("LivreId");

                    b.ToTable("Livres");
                });

            modelBuilder.Entity("two.Models.Contenu", b =>
                {
                    b.HasOne("two.Models.Livre", "Livre")
                        .WithMany("Contenus")
                        .HasForeignKey("LivreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
